/*
 * Frames.h
 *
 *  Created on: Nov 22, 2017
 *      Author: Andres Hernandez
 */

#ifndef FRAMES_H_
#define FRAMES_H_

#include "DataTypeDefinitions.h"

/************************************************************/
/**
 * \brief This data type define the data type in Wallpaper
 */
typedef enum{CHIP_MENU,
			HORDA_MENU,
			MUSIC_MENU,
			PIKACHU_MENU,
			ANDROID_MENU
}Wall_Type;

typedef Wall_Type(*fptrStateWall)(void);

typedef const struct StateWall{
	Wall_Type(*stateWall)(void);
}StateWall_Type;
/************************************************************/
/************************************************************/
/**
 * \brief This data type define the data type in Images
 */
typedef enum{CHIP,
			HORDA,
			MUSIC,
			PIKACHU,
			ANDROID
}Images_Type;

typedef Images_Type(*fptrStateImages)(void);

typedef const struct StateImages{
	Images_Type(*stateImages)(void);
}StateImages_Type;
/************************************************************/
/************************************************************/
/**
 * \brief This data type define the data type in Wallpaper in Main
 */
typedef enum{MESSAGES_MAIN,
			CONTACTS_MAIN,
			SNAKE_MAIN,
			COMPASS_MAIN,
			WALLPAPER_MAIN
}WallMenu_Type;

typedef WallMenu_Type(*fptrStateWallMenu)(void);

typedef const struct StateWallMenu{
	WallMenu_Type(*stateWallMenu)(void);
}StateWallMenu_Type;


/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 Print the test frame
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printTestFrame(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the frame 1 of animation
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printFrame1(void);


/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the frame 2 of animation
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printFrame2(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the frame 3 of animation
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printFrame3(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the frame 4 of animation
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printFrame4(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the frame 5 of animation
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printFrame5(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the frame 6 of animation
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printFrame6(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the frame 7 of animation
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printFrame7(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the frame 8 of animation
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printFrame8(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the chip frame
 	 \param[in]  void
 	 \return enum CHIIP
 */
Images_Type printChipFrame(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the horda frame
 	 \param[in]  void
 	 \return enum HORDA
 */
Images_Type printHordaFrame(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the music frame
 	 \param[in]  void
 	 \return enum MUSIC
 */
Images_Type printMusicFrame(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the pikachu frame
 	 \param[in]  void
 	 \return enum PIKACHU
 */
Images_Type printPikachuFrame(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the android frame
 	 \param[in]  void
 	 \return enum ANDROID
 */
Images_Type printAndroidFrame(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the snake frame frame
 	 \param[in]  void
 	 \return enum TRUE
 */
uint8 printSnakeGameFrame(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the game over frame
 	 \param[in]  void
 	 \return enum TRUE
 */
uint8 printGameOVer(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the start frame
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printStart(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the DIED GAME frame
 	 \param[in]  void
 	 \return TRUE
 */
uint8 printDiedGame(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the android frame
 	 \param[in]  void
 	 \return enum ANDROID MENU
 */
Wall_Type printAndroidMenu(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the chip menu frame
 	 \param[in]  void
 	 \return enum CHIP MENU
 */
Wall_Type printChipMenu(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the pikachu menu frame
 	 \param[in]  void
 	 \return enum PIKACHU MENU
 */
Wall_Type printPikachuMenu(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the music menu frame
 	 \param[in]  void
 	 \return enum MUSIC MENU
 */
Wall_Type printMusicMenu(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the horda frame
 	 \param[in]  void
 	 \return enum HORDA MENU
 */
Wall_Type printHordaMenu(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the messages main frame
 	 \param[in]  void
 	 \return enum MESSAGES MAIN
 */
WallMenu_Type printMessagesMain(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the contacts main frame
 	 \param[in]  void
 	 \return enum CONTACTS MAIN
 */
WallMenu_Type printContactsMain(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the snake main frame
 	 \param[in]  void
 	 \return enum SNAKE MAIN
 */
WallMenu_Type printSnakeMain(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the compass main frame
 	 \param[in]  void
 	 \return enum COMPASS MAIN
 */
WallMenu_Type printCompassMain(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Print the wallpaper main frame
 	 \param[in]  void
 	 \return enum WALLPAPER MAIN
 */
WallMenu_Type printWallpaperMain(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 Print the animation initial
 	 \param[in]  counter This counter continue with the next frame
 	 \return TRUE
 */
uint8 printLoading(uint8 counter);

#endif /* FRAMES_H_ */
