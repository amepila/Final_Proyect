/*
 * SnakeGame.h
 *
 *  Created on: Nov 17, 2017
 *      Author: Andres Hernandez
 */

#ifndef SNAKEGAME_H_
#define SNAKEGAME_H_

#include "DataTypeDefinitions.h"
#include "MK64F12.h"
#include "Phases.h"

/************************************************************/
/**
 * \brief This data type define the data type to Snake Information
 */
typedef struct{
	uint8 score;
	uint8 lives;
}SnakeInfo_Type;

/************************************************************/
/**
 * \brief This data type define the data type to Food snake
 */
typedef struct{
	uint8 foodX;
	uint8 foodY1;
	uint8 foodY2;
	uint8 bitY2;
}Food_Type;
/************************************************************/
/**
 * \brief This data type define the data type to the snake direction
 */
typedef enum{DIRECTION_UP,
			DIRECTION_DOWN,
			DIRECTION_LEFT,
			DIRECTION_RIGHT
}Direction_Type;

typedef Direction_Type(*fptrStateMove)(void);

typedef const struct StateMove{
	Direction_Type(*stateMove)(void);
}StateMove_Type;


/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 Print the edge of the game
 	 \param[in]  void
 	 \return void
 */
void edgeGame(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 Clear the score of player
 	 \param[in]  void
 	 \return TRUE
 */
uint8 clearScore(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 Set with the initial conditions
 	 \param[in]  void
 	 \return TRUE
 */
uint8 initialConditions(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 Print the food of snake
 	 \param[in]  void
 	 \return TRUE
 */
uint8 foodGenerator(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 Verifies if the food has eaten in X-axis
 	 \param[in]  void
 	 \return void
 */
void foodEatenX(uint32 axisX, uint32 axisY1, uint32 axisY2);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 Verifies if the food has eaten in Y-axis
 	 \param[in]  void
 	 \return void
 */
void foodEatenY(uint32 axisX, uint32 axisY1);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Maintains the up direction
 	 \param[in]  void
 	 \return current direction
 */
Direction_Type moveUp(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Maintains the down direction
 	 \param[in]  void
 	 \return current direction
 */
Direction_Type moveDown(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Maintains the left direction
 	 \param[in]  void
 	 \return current direction
 */
Direction_Type moveLeft(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Maintains the right direction
 	 \param[in]  void
 	 \return current direction
 */
Direction_Type moveRight(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief Maintains any direction
 	 \param[in]  direction Any direction
 	 \return TRUE
 */
uint8 directMove(Direction_Type direction);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 SubMain function that move the snake depends of the keys
 	 \param[in]  void
 	 \return TRUE
 */
uint8 moveSnake(void);

/********************************************************************************************/
/********************************************************************************************/
/********************************************************************************************/
/*!
 	 \brief	 Execute all the game
 	 \param[in]  void
 	 \return SnakeInfo_Type
 */
SnakeInfo_Type runSnake(void);

#endif /* SNAKEGAME_H_ */
